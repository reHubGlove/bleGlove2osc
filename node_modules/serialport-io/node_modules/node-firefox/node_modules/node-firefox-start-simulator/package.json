{
  "name": "node-firefox-start-simulator",
  "version": "1.3.1",
  "description": "Start a Firefox OS simulator",
  "main": "index.js",
  "dependencies": {
    "es6-promise": "^2.0.1",
    "firefox-client": "^0.3.0",
    "node-firefox-find-simulators": "^1.0.0",
    "portfinder": "^0.2.1"
  },
  "devDependencies": {
    "gulp": "^3.8.10",
    "mocha": "^1.21.4",
    "mockery": "^1.4.0",
    "node-firefox-build-tools": "^0.1.0",
    "nodemock": "^0.3.4",
    "should": "^4.0.4"
  },
  "scripts": {
    "gulp": "gulp",
    "test": "gulp test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mozilla/node-firefox-start-simulator.git"
  },
  "keywords": [
    "firefox",
    "developer tools",
    "b2g",
    "firefox os",
    "firefoxos",
    "fxos",
    "start"
  ],
  "author": {
    "name": "Mozilla",
    "url": "https://mozilla.org/"
  },
  "contributors": [
    {
      "name": "Nicola Greco",
      "email": "me@nicola.io",
      "url": "http://nicolagreco.com/"
    },
    {
      "name": "Rodrigo Silveira",
      "url": "http://blog.rodms.com/"
    },
    {
      "name": "Brittany Storoz",
      "email": "bstoroz@mozilla.com"
    },
    {
      "name": "Soledad PenadÃ©s",
      "email": "listas@soledadpenades.com",
      "url": "http://soledadpenades.com/"
    }
  ],
  "license": "Apache 2.0",
  "bugs": {
    "url": "https://github.com/mozilla/node-firefox-start-simulator/issues"
  },
  "homepage": "https://github.com/mozilla/node-firefox-start-simulator",
  "readme": "# node-firefox-start-simulator [![Build Status](https://secure.travis-ci.org/mozilla/node-firefox-start-simulator.png?branch=master)](http://travis-ci.org/mozilla/node-firefox-start-simulator)\n\n> Start a Firefox OS simulator.\n\n[![Install with NPM](https://nodei.co/npm/node-firefox-start-simulator.png?downloads=true&stars=true)](https://nodei.co/npm/node-firefox-start-simulator/)\n\nThis is part of the [node-firefox](https://github.com/mozilla/node-firefox) project.\n\n## Installation\n\n### From git\n\n```sh\ngit clone https://github.com/mozilla/node-firefox-start-simulator.git\ncd node-firefox-start-simulator\nnpm install\n```\n\nIf you want to update later on:\n\n```sh\ncd node-firefox-start-simulator\ngit pull origin master\nnpm install\n```\n\n### npm\n\n```sh\nnpm install node-firefox-start-simulator\n```\n\n## Usage\n\n```javascript\nvar startSimulator = require('node-firefox-start-simulator');\n\n// `startSimulator` returns a Promise\nstartSimulator(options).then(function(simulator) {\n\n});\n```\n\nwhere `options` is a plain `Object` with any of the following:\n\n* `detached`: start the simulator as a detached process. If our script is killed, the simulator will still be running.\n* `port`: make the simulator listen to this port for debugging. If not specified, we'll find an available port.\n* `version`: start a simulator in this version. If not specified, we'll start the first simulator that we can find.\n* `verbose`: pipe the output from the simulator to standard I/O. For example, you'll get JavaScript `console.log` messages executed in the simulator.\n\nand `simulator` is an object containing:\n\n* `binary`: path to the simulator binary\n* `bin`: an alias to `binary`\n* `profile`: path to the simulator profile\n* `pid`: process id\n* `process`: the actual process object\n* `port`: the port where the simulator is listening for debugging connections\n\nThere is also a `startSimulator.all()` utility to launch many simulators at once:\n\n```javascript\nstartSimulator.all(options)(simulatorOptions)\n  .then(function(launchedSimulators) {\n    // launchedSimulators is a list of simulator objects\n  });\n```\n\nThe `options` parameter here is the same as above - these options will be\ncommonly applied to all the simulators launched. \n\nThe call to `startSimulator.all()` returns a function that takes a list of\nsimulators and returns a Promise to launch them all.  The result of that\nPromise is `launchedSimulators`, a list of all the simulators that were\nlaunched.\n\nNote: This function returning a function may seem like a roundabout way to do\nthings, but take a look at the examples below to see how this works with\n`findSimulators()` and other Promise-based APIs.\n\n## Examples\n\n### Start any simulator on the first available port\n\n```javascript\nvar startSimulator = require('node-firefox-start-simulator');\n\nstartSimulator().then(function(simulator) {\n  console.log('Started simulator at port', simulator.port);\n}, function(err) {\n  console.log('Error starting a simulator', err);\n});\n\n```\n\n### Start all simulators found on your system\n```javascript\nvar findSimulators = require('node-firefox-find-simulators');\nvar startSimulator = require('node-firefox-start-simulator');\n\n// startSimulator.all() returns a function that applies the common options to\n// all the simulators discovered by findSimulators()\n\nfindSimulators.then(startSimulator.all({ detached: true }));\n```\n\nHave a look at the `examples` folder for more!\n\n<!-- These examples need updating to the Promise style and what we're actually returning\n#### Start a simulator on a given port, connect and return client\n\nStart a FirefoxOS simulator and connect to it through [firefox-client](https://github.com/harthur/firefox-client) by returning `client`.\n```javascript\nvar start = require('./node-firefox-start-simulator');\nstart({ port: 1234, connect: true }, function(err, sim) {\n  // Let's show for example all the running apps\n  sim.client.getWebapps(function(err, webapps) {\n    webapps.listRunningApps(function(err, apps) {\n      console.log(\"Running apps:\", apps);\n    });\n  });\n})\n```\n\n#### Start a simulator on known port without connecting\nJust start a FirefoxOS simulator without opening a connection:\n\n```javascript\nvar start = require('./node-firefox-start-simulator');\nstart({ port: 1234, connect: false }, function(err, sim) {\n  // Let's show for example all the running apps\n  sim.client.connect(1234, function() {\n    client.getWebapps(function(err, webapps) {\n      webapps.listRunningApps(function(err, apps) {\n        console.log(\"Running apps:\", apps);\n      });\n    });\n  });\n})\n```\n\n#### Start and kill simulator\n\n```javascript\nvar start = require('./node-firefox-start-simulator');\nstart({ connect: true }, function(err, sim) {\n  sim.client.disconnect();\n  process.kill(sim.pid);\n})\n```\n\n#### Force start a simulator\n\n```javascript\nvar start = require('./node-firefox-start-simulator');\nstart({ connect: true, force: true }, function(err, sim) {\n  sim.client.disconnect();\n  process.kill(sim.pid);\n})\n```\n-->\n\n## Documentation\n\nIf you want to contribute to this module, it might be interesting to have a look at the way WebIDE launches the simulator. The code for this is in [simulator-process.js](https://dxr.mozilla.org/mozilla-central/source/b2g/simulator/lib/simulator-process.js). Whenever possible, we want to mimic the WebIDE experience as closely as possible.\n\n## History\n\nThis is based on initial work on fxos-start by Nicola Greco.\n\n",
  "readmeFilename": "README.md",
  "_id": "node-firefox-start-simulator@1.3.1",
  "_from": "node-firefox-start-simulator@^1.3.1"
}

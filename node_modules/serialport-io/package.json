{
  "name": "serialport-io",
  "version": "0.1.10",
  "description": "Virtual serial device over socket.io",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:elin-moco/serialport-io.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node server.js"
  },
  "author": {
    "name": "Eddie Lin"
  },
  "license": "MPL 2.0",
  "dependencies": {
    "ble-serialport": "0.1.8",
    "noble": "^1.2.0",
    "node-firefox": "^0.1.0",
    "serialport": "^1.7.4",
    "socket.io": "^1.3.6"
  },
  "homepage": "https://github.com/elin-moco/serialport-io",
  "devDependencies": {
    "del": "^1.2.0",
    "firmata": "^0.5.5",
    "gulp": "^3.9.0",
    "gulp-browserify": "^0.5.1",
    "gulp-compressor": "^0.1.0",
    "gulp-jscs": "^1.6.0",
    "gulp-jscs-stylish": "^1.1.0",
    "gulp-jshint": "^1.11.2",
    "gulp-jsonlint": "^1.1.0",
    "gulp-rename": "^1.2.2",
    "gulp-sloc": "^1.0.4",
    "gulp-uglify": "^1.2.0",
    "gulp-util": "^3.0.6",
    "johnny-five": "^0.8.85",
    "jscs-jsdoc": "^1.1.0"
  },
  "readme": "SocketIoSerialPort\n=============\n\nA virtual [node-serialport] implementation that uses [socket.io] as the transport.\n\n# Prerequisites\n\nFirst you need [git] and [node.js] to clone this repo and install dependencies:\n```\ngit clone https://github.com/elin-moco/serialport-io\ncd serialport-io\nnpm install\n```\n\nSecondly, you'll need an [Arduino] board with [StandardFirmata],\nput an LED on pin 7, connect Arduino to you computer via USB cable.\n\nTo use socket.io to send/receive data to the device with [firmata] or [Johnny Five],\nrun below gulp tasks to [browserify] them like:\n```\ngulp build\n```\n\nYou'll find the browserified scripts in `build` folder \n\n# Running Server\n```\nnode server.js\n```\nWill get you started, server is listening on port 3000 by default.\nThis server pass data bewteen browser and node.js to control your device,\nmake sure your server is running before running your code in browser or node.js.\n\n# Use with Johnny Five\n\nInclude Johnny Five bundle script in your html file:\n```js\n  <script src=\"http://localhost:3000/socket.io/socket.io.js\"></script>\n  <script type=\"text/javascript\" src=\"j5-bundle.js\"></script>\n```\n```javascript\nvar SocketIoSerialPort = require('serialport-io').SerialPort;\nvar five = require('johnny-five');\n```\n\nThen use it directly in your script:\n```javascript\nvar socket = io('ws://localhost:3000');\n\nvar sp = new SocketIoSerialPort({\n  client: socket,\n  device: {   //put your device channel/address here\n    channel: 'serial',\n    address: '/dev/cu.usbmodem1411'\n  }\n});\n\nsp.connect().then(function() {\n  console.log('SocketIoSerialPort.open');\n  // have a ready serial port, do something with it:\n  var board = new five.Board({port: sp, repl: false});\n  board.on('ready', function() {\n    console.log('actually connected to an arduino!');\n    var led = new five.Led(7);\n    led.blink();\n  });\n});\n\n```\n\nAnd you should see the LED blinks once you have the webapp(page) opened.\nOr you can open example/browser-j5.html directly to see live demo.\n\n# Use with Firmata\n\nInclude the firmata bundle script in your html file:\n```html\n  <script src=\"http://localhost:3000/socket.io/socket.io.js\"></script>\n  <script type=\"text/javascript\" src=\"firmata-bundle.js\"></script>\n```\nTo use with [node.js], you'll need these two require statements:\n```javascript\nvar SocketIoSerialPort = require('serialport-io').SerialPort;\nvar firmata = require('firmata');\n```\n\nThen use it directly in your script:\n```javascript\nvar socket = io('ws://localhost:3000');\n\nvar sp = new SocketIoSerialPort({\n  client: socket,\n  device: {   //put your device channel/address here\n    channel: 'serial',\n    address: '/dev/cu.usbmodem1411'\n  }\n});\n\nsp.connect().then(function() {\n  console.log('SocketIoSerialPort.open');\n  // have a ready serial port, do something with it:\n  var board = new firmata.Board(sp);\n  board.on('ready', function() {\n    console.log('actually connected to an arduino!');\n    board.digitalWrite(7, 1);\n  });\n});\n\n```\n\nAnd you should see the LED on once you have the webapp(page) opened.\nOr you can open example/browser-firmata.html directly to see live demo.\n\n# USB port address\n\nIf you don't know which USB port connects to your Arduino,  \nyou can find it in [Arduino IDE] under 'Tools' menu.\n\n\nThe port pattern on different platform will be:\n\nOSX: /dev/tty.usbmodem\\*\\*\\*\\*\n\nLinux: /dev/ttyUSB\\*\n\nWindows: COM\\*\n\n# See Also\n\nSee [ble-serialport] if you are interested in running j5/firmata on Firefox OS\nvia BLE.\n\n[BLE]: https://en.wikipedia.org/wiki/Bluetooth_low_energy\n[Arduino]: http://arduino.cc/\n[Arduino IDE]: https://www.arduino.cc/en/main/software\n[BleShield]: http://redbearlab.com/bleshield/\n[node-serialport]: https://github.com/voodootikigod/node-serialport\n[ble-serialport]: https://github.com/elin-moco/ble-serialport\n[firmata]: https://github.com/jgautier/firmata/ \n[Johnny Five]: http://github.com/rwaldron/johnny-five/ \n[StandardFirmata]: https://github.com/firmata/arduino/tree/master/examples/StandardFirmata\n[browserify]: http://browserify.org/ \n[node.js]: https://nodejs.org/\n[git]: https://git-scm.com/\n[socket.io]: http://socket.io/\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/elin-moco/serialport-io/issues"
  },
  "_id": "serialport-io@0.1.10",
  "_from": "serialport-io@"
}
